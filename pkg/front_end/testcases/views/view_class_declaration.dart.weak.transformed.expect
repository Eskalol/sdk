library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

abstract class Mixin extends core::Object /*isMixinDeclaration*/  {
}
class Class2 extends core::Object implements self::Mixin /*isEliminatedMixin,hasConstConstructor*/  {
  const synthetic constructor •() → self::Class2
    : super core::Object::•()
    ;
}
view Class1 /* representationType = core::int */ {
}
view Class3<T extends core::Object? = dynamic> /* representationType = core::List<T%> */ {
}
static method method(self::Class1 c1, self::Class3<core::int> c3) → dynamic {}
